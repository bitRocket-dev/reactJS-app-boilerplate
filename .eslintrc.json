{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "react-app",
    "plugin:react/recommended",
    "standard-with-typescript",
    "airbnb",
    "airbnb-typescript",
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/eslint-recommended",
    "prettier",
    "plugin:@typescript-eslint/recommended"
  ],
  "overrides": [
    {
      "files": ["cypress/**/*.ts"],
      "plugins": ["cypress"],
      "extends": ["plugin:cypress/recommended"],
      "parserOptions": {
        "project": "./cypress/tsconfig.json"
      }
    }
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": ["./tsconfig.json"],
    "tsconfigRootDir": "./"
  },
  "plugins": ["react", "react-hooks", "jsx-a11y", "@typescript-eslint", "@typescript-eslint/eslint-plugin"],
  "rules": {
    "react/function-component-definition": "off",
    "@typescript-eslint/prefer-nullish-coalescing": "off",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/default-param-last": "error",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/lines-between-class-members": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      //bollean with prefix "is", "should", "has", "can", "did", "will"
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has", "can", "did", "will"]
      },
      //const only write in camelCase or UPPER_CASE
      {
        "selector": "variable",
        "modifiers": ["const"],
        "format": ["camelCase", "UPPER_CASE", "PascalCase"]
      },
      {
        //Enforce that type parameters (generics) are prefixed with
        "selector": "typeParameter",
        "format": ["PascalCase"],
        "prefix": ["T"]
      },
      //Enforce that interface names do not begin with an I
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": false
        }
      },
      //Enforce that variable and function names are in camelCase
      {
        "selector": ["variable"],
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      //Ignore destructured names
      {
        "selector": "variable",
        "modifiers": ["destructured"],
        "format": null
      }
    ],
    "@typescript-eslint/consistent-type-imports": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/no-confusing-void-expression": "off",
    "@typescript-eslint/triple-slash-reference": "off",
    "no-param-reassign": "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-use-before-define": "error",
    "no-unused-vars": "error",
    "curly": "error",
    "eqeqeq": "error",
    "import/default": "error",
    "import/export": "error",
    "import/named": "error",
    "import/namespace": "error",
    "import/no-duplicates": "error",
    "import/no-extraneous-dependencies": "off",
    "import/no-named-as-default-member": "error",
    "import/no-unresolved": "error",
    "import/no-unused-modules": "off",
    "import/prefer-default-export": "off",
    "no-alert": "error",
    "no-async-promise-executor": "error",
    "no-duplicate-imports": "error",
    "no-empty-function": "error",
    "no-empty": "error",
    "no-useless-escape": "error",
    "no-var": "error",
    "prefer-const": "error",
    "prettier/prettier": [
      "off",
      {
        "endOfLine": "auto"
      }
    ],
    "radix": "error",
    "react-hooks/exhaustive-deps": "off",
    "react/display-name": "off",
    "react/jsx-filename-extension": "off",
    "react/jsx-key": "error",
    "react/jsx-props-no-spreading": "off",
    "react/no-unescaped-entities": "error",
    "react/prop-types": "off",
    "react/self-closing-comp": "error",
    "import/extensions": "off",
    "react/react-in-jsx-scope": "off",
    "react/button-has-type": "warn",
    "react/require-default-props": "off",
    "react/no-array-index-key": "off",
    "no-console": "warn",
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal"],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ]
  }
}
